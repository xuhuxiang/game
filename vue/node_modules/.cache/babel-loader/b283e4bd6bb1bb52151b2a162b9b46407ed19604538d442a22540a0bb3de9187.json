{"ast":null,"code":"import request from \"@/utils/request\";\n\n// 模块接口请求统一前缀\nlet baseUrl = \"/business/\";\nexport default {\n  data() {\n    return {\n      user: {},\n      form: {}\n    };\n  },\n  // 页面加载的时候，做一些事情，在created里面\n  mounted() {\n    // 初始化当前登录用户信息\n    this.getPerson();\n  },\n  // 定义一些页面上控件出发的事件调用的方法\n  methods: {\n    // 获取当前登录用户信息\n    getPerson() {\n      request.get(\"/getUser\").then(res => {\n        if (res.code === '0') {\n          this.form = res.data;\n          localStorage.setItem(\"user\", JSON.stringify(res.data));\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    // 更新当前用户信息\n    update() {\n      request.put(baseUrl, this.form).then(res => {\n        if (res.code === '0') {\n          this.$notify.success(\"更新成功\");\n          this.$bus.$emit('updateTx', this.form.avatar);\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    txSuccessUpload(res) {\n      this.form.avatar = res.data;\n    }\n  }\n};","map":{"version":3,"names":["request","baseUrl","data","user","form","mounted","getPerson","methods","get","then","res","code","localStorage","setItem","JSON","stringify","$notify","error","msg","update","put","success","$bus","$emit","avatar","txSuccessUpload"],"sources":["src/views/manager/pBusiness.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"main-body-header\">\r\n      个人信息\r\n    </div>\r\n    <div class=\"main-body-content\">\r\n      <div style=\"width: 50%; padding: 10px 0\">\r\n        <el-form :model=\"form\" label-position=\"right\" label-width=\"100px\" style=\"padding-right: 40px\">\r\n          <el-form-item label=\"头像\">\r\n            <el-upload action=\"http://localhost:8080/files/upload\" ref=\"tx\" :on-success=\"txSuccessUpload\">\r\n              <el-button size=\"small\" type=\"success\">点击上传</el-button>\r\n            </el-upload>\r\n          </el-form-item>\r\n          <el-form-item label=\"用户名\">\r\n            <el-input size=\"small\" v-model=\"form.username\" placeholder=\"请输入用户名\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"手机号\">\r\n            <el-input size=\"small\" v-model=\"form.phone\" placeholder=\"请输入手机号\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"性别\">\r\n            <el-radio-group size=\"small\" v-model=\"form.sex\">\r\n              <el-radio label=\"男\"></el-radio>\r\n              <el-radio label=\"女\"></el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n          <div style=\"text-align: center; margin-top: 20px\">\r\n            <el-button size=\"small\" type=\"primary\" @click=\"update()\">保 存</el-button>\r\n          </div>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\n// 模块接口请求统一前缀\r\nlet baseUrl = \"/business/\"\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {},\r\n      form: {\r\n\r\n      }\r\n    }\r\n  },\r\n  // 页面加载的时候，做一些事情，在created里面\r\n  mounted() {\r\n    // 初始化当前登录用户信息\r\n    this.getPerson();\r\n\r\n  },\r\n  // 定义一些页面上控件出发的事件调用的方法\r\n  methods: {\r\n    // 获取当前登录用户信息\r\n    getPerson() {\r\n      request.get(\"/getUser\").then(res => {\r\n        if (res.code === '0') {\r\n          this.form = res.data;\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data))\r\n        } else {\r\n          this.$notify.error(res.msg);\r\n        }\r\n      })\r\n    },\r\n\r\n    // 更新当前用户信息\r\n    update() {\r\n      request.put(baseUrl, this.form).then(res => {\r\n        if (res.code === '0') {\r\n          this.$notify.success(\"更新成功\");\r\n          this.$bus.$emit('updateTx', this.form.avatar)\r\n        } else {\r\n          this.$notify.error(res.msg);\r\n        }\r\n      })\r\n    },\r\n\r\n    txSuccessUpload(res) {\r\n      this.form.avatar = res.data;\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAmCA,OAAAA,OAAA;;AAEA;AACA,IAAAC,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA,GAEA;IACA;EACA;EACA;EACAC,QAAA;IACA;IACA,KAAAC,SAAA;EAEA;EACA;EACAC,OAAA;IACA;IACAD,UAAA;MACAN,OAAA,CAAAQ,GAAA,aAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAP,IAAA,GAAAM,GAAA,CAAAR,IAAA;UACAU,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAL,GAAA,CAAAR,IAAA;QACA;UACA,KAAAc,OAAA,CAAAC,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;IAEA;IACAC,OAAA;MACAnB,OAAA,CAAAoB,GAAA,CAAAnB,OAAA,OAAAG,IAAA,EAAAK,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAK,OAAA,CAAAK,OAAA;UACA,KAAAC,IAAA,CAAAC,KAAA,kBAAAnB,IAAA,CAAAoB,MAAA;QACA;UACA,KAAAR,OAAA,CAAAC,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;IAEAO,gBAAAf,GAAA;MACA,KAAAN,IAAA,CAAAoB,MAAA,GAAAd,GAAA,CAAAR,IAAA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}