{"ast":null,"code":"import request from \"@/utils/request\";\nimport wangEditor from \"wangeditor\";\n\n// 商品管理模块接口请求统一前缀\nlet baseUrl = \"/order/\";\nexport default {\n  data() {\n    return {\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      colWidth: 150,\n      tableData: [],\n      pageNum: 1,\n      dialogVisible: false,\n      search: {},\n      form: {},\n      total: 0,\n      richTextDialogVisible: false\n    };\n  },\n  // 页面加载的时候，做一些事情，在created里面\n  mounted() {\n    // 加载订单信息\n    this.load();\n  },\n  // 定义一些页面上控件出发的事件调用的方法\n  methods: {\n    operationSpace() {\n      let width = 0;\n      let _this = this;\n      setTimeout(() => {\n        let rows = document.getElementsByClassName('el-table__row');\n        if (rows && rows.length) {\n          for (const row of rows) {\n            let tmpWidth = 0;\n            let tds = row.getElementsByTagName('td');\n            let btns = tds[tds.length - 1].getElementsByTagName('button');\n            for (let i = 0; i < btns.length; i++) {\n              tmpWidth += btns[i].offsetWidth + 5;\n            }\n            if (tmpWidth > width) {\n              width = tmpWidth;\n            }\n          }\n        }\n        _this.colWidth = width;\n      }, 0);\n    },\n    // 分页加载表格数据\n    load() {\n      request.post(baseUrl + \"page?pageNum=\" + this.pageNum + \"&businessId=\" + this.user.id, this.search).then(res => {\n        if (res.code === '0') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n          this.operationSpace();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    // 根据ID删除某条数据\n    del(id) {\n      request.delete(baseUrl + id).then(res => {\n        if (res.code === '0') {\n          this.$notify.success('删除成功');\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.pageNum = pageNum;\n      this.load();\n    },\n    updateStatus(data, status) {\n      data.status = status;\n      request.put(baseUrl, data).then(res => {\n        if (res.code === '0') {\n          this.$notify.success(\"操作成功\");\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","wangEditor","baseUrl","data","user","localStorage","getItem","JSON","parse","colWidth","tableData","pageNum","dialogVisible","search","form","total","richTextDialogVisible","mounted","load","methods","operationSpace","width","_this","setTimeout","rows","document","getElementsByClassName","length","row","tmpWidth","tds","getElementsByTagName","btns","i","offsetWidth","post","id","then","res","code","list","$notify","error","msg","del","delete","success","handleCurrentChange","updateStatus","status","put"],"sources":["src/views/manager/Order.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <div class=\"main-body-content\">\n        <div class=\"main-body-search\">\n          <div class=\"main-body-header\">订单管理</div>\n          <el-input size=\"small\" class=\"main-input\" placeholder=\"请输入订单编号\" v-model=\"search.orderId\"></el-input>\n\t\t\t\t\t<el-button size=\"small\" type=\"info\" @click=\"load()\">查询</el-button>\n        </div>\n        <div class=\"main-table-box\">\n          <el-table style=\"width: 100%\" :data=\"tableData\" size=\"small\" strip header-cell-class-name=\"tableHeaderClass\" >\n\t\t\t\t\t\t<el-table-column label=\"商品图片\">\n\t\t\t\t\t\t\t<template v-slot=\"scope\">\n                <el-row style=\"flex: 1\">\n                  <el-col style=\"display: flex; margin-bottom: 5px;\">\n                    <el-image :src=\"scope.row.goods.img\" :preview-src-list=\"[scope.row.goods.img]\" style=\"width: 40px; height: 40px; border-radius: 50%; margin-left: 0\"></el-image>\n                    <div style=\"flex: 1; font-size: 14px; margin-left: 10px; height: 40px; line-height: 40px\">{{scope.row.goods.name}} x {{scope.row.num}}</div>\n                  </el-col>\n                </el-row>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</el-table-column>\n            <el-table-column label=\"订单编号\" prop=\"orderId\"></el-table-column>\n            <el-table-column label=\"下单人\" prop=\"userName\"></el-table-column>\n            <el-table-column label=\"下单时间\" prop=\"time\"></el-table-column>\n            <el-table-column label=\"订单价格\" prop=\"price\"></el-table-column>\n<!--            <el-table-column label=\"收货人\" prop=\"name\"></el-table-column>-->\n<!--            <el-table-column label=\"收货地址\" prop=\"address\"></el-table-column>-->\n<!--            <el-table-column label=\"联系方式\" prop=\"phone\"></el-table-column>-->\n            <el-table-column label=\"订单状态\" prop=\"status\"></el-table-column>\n            <el-table-column label=\"操作\" :width=\"colWidth\" fixed=\"right\">\n              <template v-slot=\"scope\">\n<!--                <el-button type=\"primary\" v-if=\"scope.row.status === '待发货'\" @click=\"updateStatus(scope.row, '已发货')\">发货</el-button>-->\n                <el-button type=\"warning\" v-if=\"scope.row.status === '退款申请中'\" @click=\"updateStatus(scope.row, '退款完成')\">退款</el-button>\n\t\t\t\t\t\t\t\t<el-popconfirm title=\"确定删除吗？\" @confirm=\"del(scope.row.id)\">\n\t\t\t\t\t\t\t\t\t<el-button size=\"small\" type=\"danger\" slot=\"reference\">删除</el-button>\n\t\t\t\t\t\t\t\t</el-popconfirm>\n\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n        <div style=\"margin: 20px 0\">\n          <el-pagination\n              background\n              @current-change=\"handleCurrentChange\"\n              :current-page=\"pageNum\"\n              :page-size=\"5\"\n              layout=\"total, prev, pager, next\"\n              :total=\"total\">\n          </el-pagination>\n        </div>\n      </div>\n    </div>\n\t<el-dialog title=\"商品介绍\" :visible.sync=\"richTextDialogVisible\">\n\t\t<div class=\"w-e-text\" v-html=\"form.jdjs\"></div>\n\t</el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\nimport wangEditor from \"wangeditor\";\n\n// 商品管理模块接口请求统一前缀\nlet baseUrl = \"/order/\"\n\nexport default {\n  data() {\n    return {\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      colWidth: 150,\n      tableData: [],\n      pageNum: 1,\n      dialogVisible: false,\n      search: {},\n      form: {\n      },\n      total: 0,\n\t\t\trichTextDialogVisible: false,\n\n    }\n  },\n  // 页面加载的时候，做一些事情，在created里面\n  mounted() {\n\t\t// 加载订单信息\n\t\tthis.load();\n  },\n  // 定义一些页面上控件出发的事件调用的方法\n  methods: {\n    operationSpace() {\n      let width = 0\n      let _this = this\n      setTimeout(() => {\n        let rows = document.getElementsByClassName('el-table__row');\n        if (rows && rows.length) {\n          for (const row of rows) {\n            let tmpWidth = 0\n            let tds = row.getElementsByTagName('td')\n            let btns = tds[tds.length - 1].getElementsByTagName('button')\n            for (let i = 0; i < btns.length; i++) {\n              tmpWidth += btns[i].offsetWidth + 5\n            }\n            if (tmpWidth > width) {\n              width = tmpWidth\n            }\n          }\n        }\n        _this.colWidth = width\n      }, 0)\n    },\n    // 分页加载表格数据\n    load() {\n      request.post(baseUrl + \"page?pageNum=\" + this.pageNum+\"&businessId=\"+this.user.id, this.search).then(res => {\n        if (res.code === '0') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n          this.operationSpace();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    // 根据ID删除某条数据\n    del(id) {\n      request.delete(baseUrl + id).then(res => {\n        if (res.code === '0') {\n          this.$notify.success('删除成功');\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.pageNum = pageNum;\n      this.load();\n    },\n    updateStatus(data, status) {\n      data.status = status\n      request.put(baseUrl, data).then(res => {\n        if (res.code === '0') {\n          this.$notify.success(\"操作成功\")\n          this.load()\n        } else {\n          this.$notify.error(res.msg)\n        }\n      })\n    }\n  }\n}\n</script>\n"],"mappings":"AA6DA,OAAAA,OAAA;AACA,OAAAC,UAAA;;AAEA;AACA,IAAAC,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;MACAG,QAAA;MACAC,SAAA;MACAC,OAAA;MACAC,aAAA;MACAC,MAAA;MACAC,IAAA,GACA;MACAC,KAAA;MACAC,qBAAA;IAEA;EACA;EACA;EACAC,QAAA;IACA;IACA,KAAAC,IAAA;EACA;EACA;EACAC,OAAA;IACAC,eAAA;MACA,IAAAC,KAAA;MACA,IAAAC,KAAA;MACAC,UAAA;QACA,IAAAC,IAAA,GAAAC,QAAA,CAAAC,sBAAA;QACA,IAAAF,IAAA,IAAAA,IAAA,CAAAG,MAAA;UACA,WAAAC,GAAA,IAAAJ,IAAA;YACA,IAAAK,QAAA;YACA,IAAAC,GAAA,GAAAF,GAAA,CAAAG,oBAAA;YACA,IAAAC,IAAA,GAAAF,GAAA,CAAAA,GAAA,CAAAH,MAAA,MAAAI,oBAAA;YACA,SAAAE,CAAA,MAAAA,CAAA,GAAAD,IAAA,CAAAL,MAAA,EAAAM,CAAA;cACAJ,QAAA,IAAAG,IAAA,CAAAC,CAAA,EAAAC,WAAA;YACA;YACA,IAAAL,QAAA,GAAAR,KAAA;cACAA,KAAA,GAAAQ,QAAA;YACA;UACA;QACA;QACAP,KAAA,CAAAb,QAAA,GAAAY,KAAA;MACA;IACA;IACA;IACAH,KAAA;MACAlB,OAAA,CAAAmC,IAAA,CAAAjC,OAAA,0BAAAS,OAAA,yBAAAP,IAAA,CAAAgC,EAAA,OAAAvB,MAAA,EAAAwB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAA7B,SAAA,GAAA4B,GAAA,CAAAnC,IAAA,CAAAqC,IAAA;UACA,KAAAzB,KAAA,GAAAuB,GAAA,CAAAnC,IAAA,CAAAY,KAAA;UACA,KAAAK,cAAA;QACA;UACA,KAAAqB,OAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IACA;IACAC,IAAAR,EAAA;MACApC,OAAA,CAAA6C,MAAA,CAAA3C,OAAA,GAAAkC,EAAA,EAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAE,OAAA,CAAAK,OAAA;UACA,KAAA5B,IAAA;QACA;UACA,KAAAuB,OAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IACAI,oBAAApC,OAAA;MACA,KAAAA,OAAA,GAAAA,OAAA;MACA,KAAAO,IAAA;IACA;IACA8B,aAAA7C,IAAA,EAAA8C,MAAA;MACA9C,IAAA,CAAA8C,MAAA,GAAAA,MAAA;MACAjD,OAAA,CAAAkD,GAAA,CAAAhD,OAAA,EAAAC,IAAA,EAAAkC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAE,OAAA,CAAAK,OAAA;UACA,KAAA5B,IAAA;QACA;UACA,KAAAuB,OAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}