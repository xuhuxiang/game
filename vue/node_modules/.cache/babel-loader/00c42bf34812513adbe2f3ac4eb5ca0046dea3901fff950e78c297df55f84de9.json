{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"LoginView\",\n  data() {\n    return {\n      form: {}\n    };\n  },\n  // 页面加载的时候，做一些事情，在created里面\n  mounted() {},\n  // 定义一些页面上控件出发的事件调用的方法\n  methods: {\n    // 登录按钮点击事件入口\n    login() {\n      // 页面表单数据的输入校验\n      if (!this.form.username) {\n        this.$notify.error(\"请输入用户名\");\n        return;\n      }\n      if (!this.form.password) {\n        this.$notify.error(\"请输入密码\");\n        return;\n      }\n      if (!this.form.role) {\n        this.$notify.error(\"请选择角色\");\n        return;\n      }\n      // 调用后台登录接口\n      request.post('/login', this.form).then(res => {\n        if (res.code === '0') {\n          // 将用户信息保存一份到浏览器缓存里\n          let user = res.data.user;\n          let token = res.data.token;\n          localStorage.setItem('user', JSON.stringify(user));\n          localStorage.setItem('token', token);\n          this.$notify.success(\"登录成功\");\n          // 登录成功后跳转到个人信息页\n          if (user.role === 1) {\n            console.log(user.role);\n            location.href = \"/end/pAdmin\";\n          }\n          if (user.role === 2) {\n            location.href = \"/front/index\";\n          }\n          if (user.role === 3) {\n            location.href = \"/end/pBusiness\";\n          }\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    navRegister() {\n      this.$router.push(\"/register\");\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","form","mounted","methods","login","username","$notify","error","password","role","post","then","res","code","user","token","localStorage","setItem","JSON","stringify","success","console","log","location","href","msg","navRegister","$router","push"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div style=\"display: flex\">\r\n      <el-form style=\"padding-left: 800px\">\r\n        <el-form-item class=\"form-box\" style=\"padding-top: 40px;border-radius: 10px\">\r\n          <el-form-item >\r\n            <el-input style=\"margin-bottom: 15px;\" size=\"large\" prefix-icon=\"el-icon-s-custom\" placeholder=\"请输入用户名\" v-model=\"form.username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item >\r\n            <el-input style=\"margin-bottom: 15px\" size=\"large\" show-password prefix-icon=\"el-icon-key\" placeholder=\"请输入密码\" v-model=\"form.password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item >\r\n            <el-select style=\"width: 100%;margin-bottom: 15px\" size=\"large\"  placeholder=\"请选择角色\" v-model=\"form.role\">\r\n              <el-option value=\"1\" label=\"管理员\"></el-option>\r\n              <el-option value=\"2\" label=\"用户\"></el-option>\r\n              <el-option value=\"3\" label=\"商家\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button style=\"width: 100%;height: 50px;background-color: #282b33;border-color: #282b33;color:white\" size=\"large\"  @click=\"login()\">登录</el-button>\r\n          </el-form-item>\r\n        </el-form-item>\r\n        <el-form-item style=\"background-color: #ffffff; border-radius: 10px; display: flex; justify-content: center;align-items: center\">\r\n          <el-form-item class=\"regBox\">\r\n            <a href=\"javascript:void(0)\" @click=\"navRegister()\" style=\"text-indent: 12px;\">注册新账号</a><span class=\"el-icon-right\"></span>\r\n          </el-form-item>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"LoginView\",\r\n  data() {\r\n    return {\r\n      form: {}\r\n    }\r\n  },\r\n  // 页面加载的时候，做一些事情，在created里面\r\n  mounted() {\r\n\r\n  },\r\n  // 定义一些页面上控件出发的事件调用的方法\r\n  methods: {\r\n    // 登录按钮点击事件入口\r\n    login() {\r\n      // 页面表单数据的输入校验\r\n      if (!this.form.username) {\r\n        this.$notify.error(\"请输入用户名\");\r\n        return;\r\n      }\r\n      if (!this.form.password) {\r\n        this.$notify.error(\"请输入密码\");\r\n        return;\r\n      }\r\n      if (!this.form.role) {\r\n        this.$notify.error(\"请选择角色\");\r\n        return;\r\n      }\r\n      // 调用后台登录接口\r\n      request.post('/login', this.form).then(res => {\r\n        if(res.code === '0') {\r\n          // 将用户信息保存一份到浏览器缓存里\r\n          let user = res.data.user;\r\n          let token = res.data.token;\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          localStorage.setItem('token', token);\r\n          this.$notify.success(\"登录成功\");\r\n          // 登录成功后跳转到个人信息页\r\n          if (user.role === 1) {\r\n            console.log(user.role)\r\n            location.href = \"/end/pAdmin\"\r\n          }\r\n          if (user.role === 2) {\r\n            location.href = \"/front/index\"\r\n          }\r\n          if(user.role === 3){\r\n            location.href = \"/end/pBusiness\"\r\n          }\r\n        } else {\r\n          this.$notify.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    navRegister() {\r\n      this.$router.push(\"/register\")\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.login-container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(\"@/assets/imgs/login_bg.jpg\");\r\n  background-size: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.form-box {\r\n  width: 300px;\r\n  padding: 20px 40px;\r\n  border-radius: 2px;\r\n  background-color: #ffffff;\r\n  opacity: 1;\r\n}\r\n/deep/.el-form-item {\r\n  margin-bottom: 5px;\r\n}\r\n/deep/.el-input__inner {\r\n  border-color: #ccc !important;\r\n  border-radius: 2px;\r\n  background-color: #ffffff !important;\r\n  color: #333;\r\n}\r\n/deep/.el-input__icon {\r\n  color: #666;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: #0c0c0c;\r\n  font-weight: bold;\r\n}\r\n.regBox {\r\n  font-size: 28px;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n  text-align: right;\r\n}\r\n</style>"],"mappings":";AAiCA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;IACA;EACA;EACA;EACAC,QAAA,GAEA;EACA;EACAC,OAAA;IACA;IACAC,MAAA;MACA;MACA,UAAAH,IAAA,CAAAI,QAAA;QACA,KAAAC,OAAA,CAAAC,KAAA;QACA;MACA;MACA,UAAAN,IAAA,CAAAO,QAAA;QACA,KAAAF,OAAA,CAAAC,KAAA;QACA;MACA;MACA,UAAAN,IAAA,CAAAQ,IAAA;QACA,KAAAH,OAAA,CAAAC,KAAA;QACA;MACA;MACA;MACAT,OAAA,CAAAY,IAAA,gBAAAT,IAAA,EAAAU,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA;UACA,IAAAC,IAAA,GAAAF,GAAA,CAAAZ,IAAA,CAAAc,IAAA;UACA,IAAAC,KAAA,GAAAH,GAAA,CAAAZ,IAAA,CAAAe,KAAA;UACAC,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAL,IAAA;UACAE,YAAA,CAAAC,OAAA,UAAAF,KAAA;UACA,KAAAT,OAAA,CAAAc,OAAA;UACA;UACA,IAAAN,IAAA,CAAAL,IAAA;YACAY,OAAA,CAAAC,GAAA,CAAAR,IAAA,CAAAL,IAAA;YACAc,QAAA,CAAAC,IAAA;UACA;UACA,IAAAV,IAAA,CAAAL,IAAA;YACAc,QAAA,CAAAC,IAAA;UACA;UACA,IAAAV,IAAA,CAAAL,IAAA;YACAc,QAAA,CAAAC,IAAA;UACA;QACA;UACA,KAAAlB,OAAA,CAAAC,KAAA,CAAAK,GAAA,CAAAa,GAAA;QACA;MACA;IACA;IACAC,YAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}