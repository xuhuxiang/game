{"ast":null,"code":"import request from \"@/utils/request\";\n\n// 模块接口请求统一前缀\nlet baseUrl = \"/user/\";\nexport default {\n  data() {\n    return {\n      user: {},\n      form: {},\n      dialogVisible: false,\n      account: null\n    };\n  },\n  // 页面加载的时候，做一些事情，在created里面\n  mounted() {\n    // 初始化当前登录用户信息\n    this.getPerson();\n  },\n  // 定义一些页面上控件出发的事件调用的方法\n  methods: {\n    // 获取当前登录用户信息\n    getPerson() {\n      request.get(\"/getUser\").then(res => {\n        if (res.code === '0') {\n          this.form = res.data;\n          localStorage.setItem(\"user\", JSON.stringify(res.data));\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    // 更新当前用户信息\n    update() {\n      request.put(baseUrl, this.form).then(res => {\n        if (res.code === '0') {\n          this.$notify.success(\"更新成功\");\n          this.$bus.$emit('updateTx', this.form.avatar);\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    txSuccessUpload(res) {\n      this.form.avatar = res.data;\n    },\n    init() {\n      this.account = 100;\n      this.dialogVisible = true;\n    },\n    recharge() {\n      let data = {\n        id: this.form.id,\n        account: parseFloat(this.form.account) + parseFloat(this.account)\n      };\n      request.put(\"/user\", data).then(res => {\n        if (res.code === '0') {\n          this.$notify.success('充值成功');\n          this.dialogVisible = false;\n          this.getPerson();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","baseUrl","data","user","form","dialogVisible","account","mounted","getPerson","methods","get","then","res","code","localStorage","setItem","JSON","stringify","$notify","error","msg","update","put","success","$bus","$emit","avatar","txSuccessUpload","init","recharge","id","parseFloat"],"sources":["src/views/manager/pUser.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"main-body-header\">\n      个人信息\n    </div>\n    <div class=\"main-body-content\">\n      <div style=\"width: 50%; padding: 10px 0\">\n        <el-form :model=\"form\" label-position=\"right\" label-width=\"100px\" style=\"padding-right: 40px\">\n\t\t\t\t\t<el-form-item label=\"用户名\">\n\t\t\t\t\t\t<el-input size=\"small\" v-model=\"form.username\" placeholder=\"请输入用户名\"></el-input>\n\t\t\t\t\t</el-form-item>\n\t\t\t\t\t<el-form-item label=\"头像\">\n\t\t\t\t\t\t<el-upload action=\"http://localhost:8080/files/upload\" ref=\"tx\" :on-success=\"txSuccessUpload\">\n\t\t\t\t\t\t\t<el-button size=\"small\" type=\"success\">点击上传</el-button>\n\t\t\t\t\t\t</el-upload>\n\t\t\t\t\t</el-form-item>\n\t\t\t\t\t<el-form-item label=\"手机号\">\n\t\t\t\t\t\t<el-input size=\"small\" v-model=\"form.phone\" placeholder=\"请输入手机号\"></el-input>\n\t\t\t\t\t</el-form-item>\n\t\t\t\t\t<el-form-item label=\"性别\">\n\t\t\t\t\t\t<el-radio-group size=\"small\" v-model=\"form.sex\">\n\t\t\t\t\t\t\t<el-radio label=\"男\"></el-radio>\n\t\t\t\t\t\t\t<el-radio label=\"女\"></el-radio>\n\t\t\t\t\t\t</el-radio-group>\n\t\t\t\t\t</el-form-item>\n\t\t\t\t\t<el-form-item label=\"年龄\">\n\t\t\t\t\t\t<el-input size=\"small\" v-model=\"form.age\" placeholder=\"请输入年龄\"></el-input>\n\t\t\t\t\t</el-form-item>\n          <el-form-item label=\"余额\">\n            <el-input size=\"small\" v-model=\"form.account\" disabled></el-input>\n          </el-form-item>\n          <div style=\"text-align: center; margin-top: 20px\">\n              <el-button size=\"small\" type=\"primary\" @click=\"update()\">保 存</el-button>\n              <el-button size=\"small\" type=\"warning\" @click=\"init()\">充 值</el-button>\n          </div>\n        </el-form>\n      </div>\n    </div>\n    <el-dialog title=\"请填写信息\" :visible.sync=\"dialogVisible\" width=\"40%\">\n      <el-form label-position=\"right\" label-width=\"100px\" style=\"padding-right: 40px\">\n        <el-form-item label=\"充值金额\">\n          <el-input size=\"small\" v-model=\"account\" placeholder=\"请输入金额\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button size=\"small\" type=\"primary\" @click=\"recharge()\">充 值</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\n// 模块接口请求统一前缀\nlet baseUrl = \"/user/\"\n\nexport default {\n  data() {\n    return {\n      user: {},\n      form: {},\n      dialogVisible: false,\n      account: null\n    }\n  },\n  // 页面加载的时候，做一些事情，在created里面\n  mounted() {\n    // 初始化当前登录用户信息\n    this.getPerson();\n\n  },\n  // 定义一些页面上控件出发的事件调用的方法\n  methods: {\n    // 获取当前登录用户信息\n    getPerson() {\n      request.get(\"/getUser\").then(res => {\n        if (res.code === '0') {\n          this.form = res.data;\n          localStorage.setItem(\"user\", JSON.stringify(res.data))\n        } else {\n          this.$notify.error(res.msg);\n        }\n      })\n    },\n\n    // 更新当前用户信息\n    update() {\n      request.put(baseUrl, this.form).then(res => {\n        if (res.code === '0') {\n          this.$notify.success(\"更新成功\");\n          this.$bus.$emit('updateTx', this.form.avatar)\n        } else {\n          this.$notify.error(res.msg);\n        }\n      })\n    },\n\n\t\ttxSuccessUpload(res) {\n\t\t\tthis.form.avatar = res.data;\n\t\t},\n\n    init() {\n      this.account = 100\n      this.dialogVisible = true;\n    },\n\n    recharge() {\n      let data = {id: this.form.id, account: parseFloat(this.form.account) + parseFloat(this.account)};\n      request.put(\"/user\", data).then(res => {\n        if (res.code === '0') {\n          this.$notify.success('充值成功');\n          this.dialogVisible = false;\n          this.getPerson();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      })\n    },\n  }\n}\n</script>\n"],"mappings":"AAqDA,OAAAA,OAAA;;AAEA;AACA,IAAAC,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA;MACAC,aAAA;MACAC,OAAA;IACA;EACA;EACA;EACAC,QAAA;IACA;IACA,KAAAC,SAAA;EAEA;EACA;EACAC,OAAA;IACA;IACAD,UAAA;MACAR,OAAA,CAAAU,GAAA,aAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAT,IAAA,GAAAQ,GAAA,CAAAV,IAAA;UACAY,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAL,GAAA,CAAAV,IAAA;QACA;UACA,KAAAgB,OAAA,CAAAC,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;IAEA;IACAC,OAAA;MACArB,OAAA,CAAAsB,GAAA,CAAArB,OAAA,OAAAG,IAAA,EAAAO,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAK,OAAA,CAAAK,OAAA;UACA,KAAAC,IAAA,CAAAC,KAAA,kBAAArB,IAAA,CAAAsB,MAAA;QACA;UACA,KAAAR,OAAA,CAAAC,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;IAEAO,gBAAAf,GAAA;MACA,KAAAR,IAAA,CAAAsB,MAAA,GAAAd,GAAA,CAAAV,IAAA;IACA;IAEA0B,KAAA;MACA,KAAAtB,OAAA;MACA,KAAAD,aAAA;IACA;IAEAwB,SAAA;MACA,IAAA3B,IAAA;QAAA4B,EAAA,OAAA1B,IAAA,CAAA0B,EAAA;QAAAxB,OAAA,EAAAyB,UAAA,MAAA3B,IAAA,CAAAE,OAAA,IAAAyB,UAAA,MAAAzB,OAAA;MAAA;MACAN,OAAA,CAAAsB,GAAA,UAAApB,IAAA,EAAAS,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAK,OAAA,CAAAK,OAAA;UACA,KAAAlB,aAAA;UACA,KAAAG,SAAA;QACA;UACA,KAAAU,OAAA,CAAAC,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}